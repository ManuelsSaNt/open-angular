{"ast":null,"code":"import { CONTACTS } from '../mocks/contactos.mock';\nimport * as i0 from \"@angular/core\";\nexport class ContactService {\n  constructor() {}\n  obtainContacts() {\n    return Promise.resolve(CONTACTS);\n  }\n  contactById(id) {\n    const contact = CONTACTS.find(C => C.id === id);\n    if (contact !== undefined) {\n      return Promise.resolve(contact);\n    } else {\n      return Promise.reject(\"Error cabron no esta el usuario\");\n    }\n  }\n}\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)();\n};\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,yBAAyB;;AAOlD,OAAM,MAAOC,cAAc;EAEzBC,eAAgB;EAEhBC,cAAc;IACZ,OAAOC,OAAO,CAACC,OAAO,CAACL,QAAQ,CAAC;EAClC;EAEAM,WAAW,CAACC,EAAU;IACpB,MAAMC,OAAO,GAAGR,QAAQ,CAACS,IAAI,CAAGC,CAAmB,IAAMA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;IAErE,IAAGC,OAAO,KAAKG,SAAS,EAAC;MACvB,OAAOP,OAAO,CAACC,OAAO,CAACG,OAAO,CAAC;KAChC,MACG;MACF,OAAOJ,OAAO,CAACQ,MAAM,CAAC,iCAAiC,CAAC;;EAG5D;;AAlBWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;EAAAa,YAFb;AAAM","names":["CONTACTS","ContactService","constructor","obtainContacts","Promise","resolve","contactById","id","contact","find","C","undefined","reject","factory","providedIn"],"sourceRoot":"","sources":["/home/ssanto/0Code/open-angular/part-1/src/app/services/contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { CONTACTS } from '../mocks/contactos.mock';\nimport { ContactoInterface } from '../models/contacto.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor() { }\n\n  obtainContacts(): Promise<ContactoInterface[]> {\n    return Promise.resolve(CONTACTS);\n  }\n\n  contactById(id: number): Promise<ContactoInterface> | undefined{\n    const contact = CONTACTS.find( (C:ContactoInterface ) => C.id === id);\n\n    if(contact !== undefined){\n      return Promise.resolve(contact);\n    }\n    else{\n      return Promise.reject(\"Error cabron no esta el usuario\")\n    }\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}